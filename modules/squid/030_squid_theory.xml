<?hard-pagebreak?>
<section><title>installing squid</title>
<para>This screenshot shows how to install squid on Debian with <command>aptitude</command>. Use <command>yum</command> if you are on Red Hat/CentOS.</para>
<screen>root@debian7:~# <command>aptitude install squid</command>
The following NEW packages will be installed:
  squid squid-common{a} squid-langpack{a}
0 packages upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 1,513 kB of archives. After unpacking 4,540 kB will be used.
Do you want to continue? [Y/n/?]
...output truncated...
Setting up squid-langpack (20120616-1) ...
Setting up squid-common (2.7.STABLE9-4.1) ...
Setting up squid (2.7.STABLE9-4.1) ...
Creating squid spool directory structure
2014/08/01 15:19:31| Creating Swap Directories
Restarting Squid HTTP proxy: squid.</screen>
	<para><command>squid</command>'s main configuration file is <command>/etc/squid/squid.conf</command><indexterm><primary>/etc/squid/squid.conf</primary></indexterm>. The file explains every parameter in great detail.</para>
	<screen>root@debian7:~# <command>wc -l /etc/squid/squid.conf</command>
4948 /etc/squid/squid.conf</screen>
</section>
<section><title>port 3128</title>
<para>By default the <command>squid proxy server</command> will lsiten to <command>port 3128</command>.</para>
<screen>root@debian7:~# <command>grep ^http_port /etc/squid/squid.conf</command>
http_port 3128
root@debian7:~#</screen>
</section>
<section><title>starting and stopping</title>
<para>You can manage <command>squid</command> with the standard <command>service</command> command as shown in this screenshot.</para>
<screen>root@debian7:~# <command>service squid start</command>
Starting Squid HTTP proxy: squid.
root@debian7:~# <command>service squid restart</command>
Restarting Squid HTTP proxy: squid.
root@debian7:~# <command>service squid status</command>
squid is running.
root@debian7:~# <command>service squid stop</command>
Stopping Squid HTTP proxy: squid.
root@debian7:~#</screen>
</section>
<?hard-pagebreak?>
<section><title>client proxy settings</title>
<para>To enable a proxy server in <command>Firefox</command> or <command>Iceweasel</command> go to <command>Edit Preferences</command> and configure as shown in this screenshot (replace 192.168.1.60 with the ip address of your proxy server).</para>
	<para><mediaobject><imageobject><imagedata fileref="images/proxy_firefoxsettings.png" format="PNG" align="center"></imagedata></imageobject></mediaobject></para>
	<para>Test that your internet works with the proxy enabled. Also test that after a <command>service squid stop</command> command on your proxy server that you get a message similar to this schreenshot.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/firefox_noproxy.png" format="PNG" align="center"></imagedata></imageobject></mediaobject></para>
<?hard-pagebreak?>
<para>To enable a proxy server with Google Chrome (or Debian Chromium) start the program from the command line like this:</para>
<screen>paul@debian7:~$ chromium --proxy-server='192.168.1.60:3128'</screen>
<para>Disabling the proxy with <command>service squid stop</command> should result in an error message similar to this screenshot.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/chromium_noproxy.png" format="PNG" align="center"></imagedata></imageobject></mediaobject></para>
</section>
<section><title>squid</title>
<para></para>
</section>
<section><title>squid</title>
<para></para>
</section>
<section><title>/var/spool/squid</title>
	<para>The <command>squid</command><indexterm><primary>squid</primary></indexterm> proxy server stores its cache by default in <command>/var/spool/squid</command>. This setting is configurable in /etc/squid/squid.conf.</para>
	<screen>
[root@RHEL4 ~]# grep "^# cache_dir" /etc/squid/squid.conf
# cache_dir ufs /var/spool/squid 100 16 256
	</screen>
	<para>It is possible that in a default setup where squid has never run, that the /var/spool/squid directories do not exist.</para>
	<screen>
[root@RHEL4 ~]# ls -al /var/spool/squid
ls: /var/spool/squid: No such file or directory
	</screen>
	<para>Running <command>squid -z</command> will create the necessary squid directories.</para>
	<screen>
[root@RHEL4 ~]# squid -z
2008/09/22 14:07:47| Creating Swap Directories
[root@RHEL4 ~]# ls -al /var/spool/squid
total 80
drwxr-x---   18 squid squid 4096 Sep 22 14:07 .
drwxr-xr-x   26 root  root  4096 May 30  2007 ..
drwxr-xr-x  258 squid squid 4096 Sep 22 14:07 00
drwxr-xr-x  258 squid squid 4096 Sep 22 14:07 01
drwxr-xr-x  258 squid squid 4096 Sep 22 14:07 02
...
	</screen>
	</section>
<section><title>port 3128 or port 8080</title>
	<para>By default the squid proxy server will bind to port 3128 to listen to incoming requests.</para>
	<screen>
[root@RHEL4 ~]# grep "default port" /etc/squid/squid.conf
#       The default port number is 3128.
	</screen>
	<para>Many organizations use port 8080 instead.</para>
	<screen>
[root@RHEL4 ~]# grep 8080 /etc/squid/squid.conf
http_port 8080
	</screen>
</section>
<section><title>/var/log/squid</title>
	<para>The standard log file location for squid is <command>/var/log/squid</command><indexterm><primary>/var/log/squid</primary></indexterm>.</para>
	<screen>
[root@RHEL4 ~]# grep "/var/log" /etc/squid/squid.conf
# cache_access_log /var/log/squid/access.log
# cache_log /var/log/squid/cache.log
# cache_store_log /var/log/squid/store.log
	</screen>
	<screen></screen>
</section>
<section><title>access control</title>
	<para>The default squid setup only allows localhost access. To enable access for a private network range, look for the "INSERT YOUR OWN RULE(S) HERE..." sentence in squid.conf and add two lines similar to the screenshot below.</para>
	<screen>
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS

acl company_network src 192.168.1.0/24
http_access allow company_network
</screen>
	<para>Restart the squid server, and now the local private network can use the proxy cache.</para>
</section>
<section><title>testing squid</title>
	<para>First, make sure that the server running squid has access to the internet.</para>
	<screen>
[root@RHEL4 ~]# wget -q http://linux-training.be/index.html
[root@RHEL4 ~]# ls -l index.html 
-rw-r--r--  1 root root 2269 Sep 18 13:18 index.html
[root@RHEL4 ~]#
	</screen>
	<para>Then configure a browser on a client to use the proxy server. OR you could set the HTTP_PROXY (sometimes http_proxy) variable to point command line programs to the proxy.</para>
	<screen>
[root@fedora ~]# export HTTP_PROXY=http://192.168.1.39:8080
[root@ubuntu ~]# export http_proxy=http://192.168.1.39:8080
	</screen>
	<para>Testing a client machine can then be done with wget (wget -q is used to simplify the screenshot).</para>
	<screen>
[root@RHEL5 ~]# > /etc/resolv.conf
[root@RHEL5 ~]# wget -q http://www.linux-training.be/index.html
[root@RHEL5 ~]# ls -l index.html 
-rw-r--r-- 1 root root 2269 Sep 18  2008 index.html
[root@RHEL5 ~]#
	</screen>
</section>
<section><title>name resolution</title>
	<para>You need name resolution working on the squid server, but you don't need name resolution on the clients.</para>
	<screen>
[paul@RHEL5 ~]$ wget http://grep.be
--14:35:44--  http://grep.be
Resolving grep.be... failed: Temporary failure in name resolution.
[paul@RHEL5 ~]$ export http_proxy=http://192.168.1.39:8080
[paul@RHEL5 ~]$ wget http://grep.be
--14:35:49--  http://grep.be/
Connecting to 192.168.1.39:8080... connected.
Proxy request sent, awaiting response... 200 OK
Length: 5390 (5.3K) [text/html]
Saving to: `index.html.1'

100%[================================>] 5,390       --.-K/s   in 0.1s

14:38:29 (54.8 KB/s) - `index.html' saved [5390/5390]

[paul@RHEL5 ~]$ 
	</screen>
</section>
